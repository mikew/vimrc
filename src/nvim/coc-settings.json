{
  // Main.
  "suggest.autoTrigger": "always",
  "coc.preferences.jumpCommand": "split",
  // https://github.com/neoclide/coc.nvim/wiki/F.A.Q#sign-of-diagnostics-not-shown
  "diagnostic.signOffset": 9999999,

  // Use diagnostic-languageserver for formatting when possible.
  "tsserver.formatOnType": false,
  "typescript.format.enabled": false,
  "javascript.format.enabled": false,
  "coc.preferences.formatOnType": false,

  "coc.preferences.colorSupport": false,

  // TypeScript.
  "tsserver.implicitProjectConfig.checkJs": true,
  "tsserver.disableAutomaticTypeAcquisition": true,

  // Auto formatting.
  "coc.preferences.formatOnSaveFiletypes": [
    "css",
    "html",
    "json",
    "jsonc",
    "javascript",
    "javascriptreact",
    "javascript.jsx",
    "typescript",
    "typescriptreact",
    "typescript.jsx",
    "markdown"
  ],
  // Formatters by filetype.
  "diagnostic-languageserver.formatFiletypes": {
    "json": [
      "prettier"
    ],
    "jsonc": [
      "prettier"
    ],
    "javascript": [
      "eslint",
      "prettier"
    ],
    "javascript.jsx": [
      "eslint",
      "prettier"
    ],
    "javascriptreact": [
      "eslint",
      "prettier"
    ],
    "typescript": [
      "eslint",
      "prettier"
    ],
    "typescript.jsx": [
      "eslint",
      "prettier"
    ],
    "typescriptreact": [
      "eslint",
      "prettier"
    ],
    "css": [
      "stylelint"
    ],
    "markdown": [
      "prettier"
    ]
  },
  // Linters by filetype.
  "diagnostic-languageserver.filetypes": {
    "javascript": [
      "eslint"
    ],
    "javascript.jsx": [
      "eslint"
    ],
    "javascriptreact": [
      "eslint"
    ],
    "typescript": [
      "eslint",
      "tslint"
    ],
    "typescript.jsx": [
      "eslint",
      "tslint"
    ],
    "typescriptreact": [
      "eslint",
      "tslint"
    ],
    "sh": [
      "shellcheck"
    ],
    "css": [
      "stylelint"
    ]
  },
  // Linter definitions.
  "diagnostic-languageserver.linters": {
    "eslint": {
      "command": "./node_modules/.bin/eslint_d",
      "rootPatterns": [
        ".git"
      ],
      "debounce": 50,
      "args": [
        "--stdin",
        "--format",
        "json"
      ],
      "sourceName": "eslint",
      "parseJson": {
        "errorsRoot": "[0].messages",
        "line": "line",
        "column": "column",
        "endLine": "endLine",
        "endColumn": "endColumn",
        "message": "${message} [${ruleId}]",
        "security": "severity"
      },
      "securities": {
        "2": "error",
        "1": "warning"
      }
    },
    "shellcheck": {
      "command": "shellcheck",
      "debounce": 50,
      "args": [
        "--format",
        "json",
        "-"
      ],
      "sourceName": "shellcheck",
      "parseJson": {
        "line": "line",
        "column": "column",
        "endLine": "endLine",
        "endColumn": "endColumn",
        "message": "${message} [${code}]",
        "security": "level"
      },
      "securities": {
        "error": "error",
        "warning": "warning",
        "info": "info",
        "style": "hint"
      }
    },
    "stylelint": {
      "command": "./node_modules/.bin/stylelint_d",
      "rootPatterns": [
        ".git"
      ],
      "debounce": 50,
      "args": [
        "--stdin",
        "--formatter",
        "json",
        "--file",
        "%filepath"
      ],
      "sourceName": "stylelint",
      "parseJson": {
        "errorsRoot": "[0].warnings",
        "line": "line",
        "column": "column",
        "message": "${text}",
        "security": "severity"
      },
      "securities": {
        "error": "error",
        "warning": "warning"
      }
    }
  },

  // Formatter definitions.
  "diagnostic-languageserver.formatters": {
    "eslint": {
      "command": "./node_modules/.bin/eslint_d",
      "args": [
        "--stdin",
        "--fix-to-stdout"
      ],
      "rootPatterns": [
        ".git"
      ]
    },
    "prettier": {
      "command": "./node_modules/.bin/prettier_d_slim",
      "args": [
        "--stdin-filepath",
        "%filepath",
        "--text",
        "%text"
      ],
      "rootPatterns": [
        ".git"
      ]
    },
    "stylelint": {
      "command": "./node_modules/.bin/stylelint_d",
      "args": [
        "--stdin",
        "--fix",
        "--file",
        "%filepath"
      ],
      "rootPatterns": [".git"]
    },
  }
}
